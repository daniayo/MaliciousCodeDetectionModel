import os
import subprocess
import random
from zipfile import ZipFile
import shutil

# TheZoo GitHub Repository
THEZOO = "https://github.com/ytisf/theZoo.git"
DOWNLOAD_FOLDER = "./malware_samples"

# Clone the repository
def clone_theZoo():
    if not os.path.exists("theZoo"):
        print("Cloning TheZoo repository...")
        subprocess.run(["git", "clone", THEZOO], check=True)
    else:
        print("Already Cloned! :)")

# List of malware directories
def get_malware_list():
    binaries_path = "theZoo/malware/Binaries/"
    if not os.path.exists(binaries_path):
        print(f"Error: The path {binaries_path} does not exist.")
        return []

    # Look for .zip files or specific binary files
    malware_list = [os.path.join(binaries_path, file) for file in os.listdir(binaries_path) if file.endswith(".zip")]
    if len(malware_list) == 0:
        print("No zip files found, checking for binary files.")
        # Add logic to handle non-zip files if necessary, e.g., list all files
        malware_list = [os.path.join(binaries_path, file) for file in os.listdir(binaries_path)]

    print(f"Found {len(malware_list)} malware samples.")
    return malware_list

# Download and decrypt
def download_samples(sample_folder=DOWNLOAD_FOLDER):
    malware_list = get_malware_list()
    if not malware_list:
        return

    # Randomly shuffle the malware list
    random.shuffle(malware_list)

    # Ensure the download folder exists
    os.makedirs(sample_folder, exist_ok=True)

    for idx, malware_path in enumerate(malware_list, start=1):
        malware_name = os.path.basename(malware_path)
        print(f"[{idx}/{len(malware_list)}] Processing: {malware_name}")

        # Locate the zip file
        for file in os.listdir(malware_path):
            if file.endswith(".zip"):
                source = os.path.join(malware_path, file)
                destination = os.path.join(sample_folder, f"{malware_name}.zip")

                # Copy and decrypt
                print(f"Copying {file} to {sample_folder}...")
                shutil.copy(source, destination)

                # Decrypt (password : 'infected')
                try:
                    with ZipFile(destination) as zip_file:
                        malware_output_folder = os.path.join(sample_folder, malware_name)
                        os.makedirs(malware_output_folder, exist_ok=True)
                        print(f"Decrypting {file}...")
                        zip_file.extractall(malware_output_folder, pwd=b'infected')
                    print(f"Decryption complete for {malware_name}.")
                except Exception as e:
                    print(f"Error during decryption of {malware_name}: {e}")

# Main Function
if __name__ == "__main__":
    # Step 1: Clone the repository
    clone_theZoo()

    # Step 2: Download and decrypt
    download_samples()

    print(f"Finish!! :> Samples stored in {DOWNLOAD_FOLDER}.")
